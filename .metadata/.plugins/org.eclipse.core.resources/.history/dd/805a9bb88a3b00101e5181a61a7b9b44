package controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;

@WebServlet("/mem/*")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger Log = LoggerFactory.getLogger(MemberController.class);
	
	// requestDispatcher : 요청에 대한 응답 데이터 jsp로 전송
	private RequestDispatcher rdp;
	// jsp의 주소를 저장하는 변수
	private String destPage;
	
	// isOk
	private int isOk;
	
	// service interface
	private MemberService msv;
       
    public MemberController() {
    	msv = new MemberServiceImpl();
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		
		// uri 경로
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/") + 1);
		Log.info(path);
		
		switch (path) {
		case "countID":
			try {
				String id = request.getParameter("id");
				int count = msv.countID(id);
				Log.info(">>>> countID >> {} : " + count, id);
				
				PrintWriter out = response.getWriter();
				out.print(count);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		case "register":
			// index의 회원가입 버튼 클릭 시 화면만 이동
			destPage = "/member/register.jsp";
			break;
		case "insert":
			try {
				// 아이디 중복체크를 했다고 가정
				MemberVO mvo = new MemberVO(
						request.getParameter("id"),
						request.getParameter("pwd"),
						request.getParameter("email"),
						request.getParameter("phone"));
				Log.info(">>>> 등록할 멤버 >> {}", mvo);
				isOk = msv.insert(mvo);
				destPage = "/index.jsp";
				Log.info(">>>> member 등록 ", isOk > 0 ? "성공" : "실패");
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "login":
			try {
				/* 1. jsp에서 보내온 id, pwd 받기
				 * 2. id, pwd로 객체를 생성 => DB로 전송
				 * 3. 해당 ID와 PWD로 객체를 검색해서 객체 형태로 리턴
				 * 4. 객체를 컨트롤러로 가져와서 세션에 저장
				 * session : 모든 jsp에서 공유하는 객체 / 브라우저가 종료되면 삭제
				 * */
				String id = request.getParameter("id");
				String pwd = request.getParameter("pwd");
				MemberVO mvo = new MemberVO(id, pwd);
				
				// id와 pwd가 일치하는 객체를 리턴
				MemberVO loginMvo = msv.login(mvo);
				Log.info(" >>>> login mvo >> {}", loginMvo);
				
				// 로그인 실패 시 loginMvo = null
				if (loginMvo != null) {
					// session에 저장
					// session 객체 가져오기
					HttpSession session = request.getSession();
					session.setAttribute("ses", loginMvo);
					session.setMaxInactiveInterval(10*60); // 로그인 유지시간 설정(초단위)
				} else {
					// 로그인 실패
					// index.jsp(로그인 페이지)로 값을 전송
					request.setAttribute("msg_login", -1);
				}
				destPage = "/index.jsp";
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		case "logout":
			try {
				// 세션 객체에 값이 있다면 끊기
				HttpSession session = request.getSession();
				MemberVO mvo = (MemberVO)session.getAttribute("ses");
				Log.info(">>>> logout mvo {}", mvo);
				
				// lastlogin 날짜 기록 update
				isOk = msv.lastloginUpdate(mvo.getId());
				Log.info(">>>> lastloginUpdate isOk >> {}", isOk > 0 ? "성공" : "실패");
				
				// session의 객체를 지우기
				session.removeAttribute("ses");
				// 세션을 무효화(세션 끊기)
				session.invalidate();
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		}
		
		// 목적지 이동
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
	}
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
